# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Alt keys as mod (applies to both alt keys):
set $mod Mod1

# windows key: (avoid, already bound to ulauncher)
# set $mod2 Mod4

# Font for window titles.
# Will also be used by the bar unless a different font is used in the bar {} block below.
font pango: System San Franciso Display 6
# (To adjust global font NOT INCLUDING the bar, launch lxappearance.)
# (After finding a relatively acceptable sweet spot, start adjust font sizes in other application.)

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal (the docs referenced a $TERMINAL variable, but no such variable was generated, so I did it myself)
set $TERMINAL termite
bindsym $mod+Return exec $TERMINAL

# i3-sensible-terminal chooses from a list of terminals in a hierarchy, had to comment this out because it was opening
# an emulator that I didn't want as my default
# bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindsym $mod+z exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Monitors:
set $m1 DP-4
set $m2 HDMI-0

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1: Start "
set $ws2 "2: Browser "
set $ws3 "3: Work "
set $ws4 "4: Code "
set $ws5 "5: Throwaway-1"
set $ws6 "6: Throwaway-2"
set $ws7 "7: Throwaway-3"
set $ws8 "8: Throwaway-4"
set $ws9 "9: Throwaway-5"
set $ws10 "10: System "
# Settings is probably the least frequently used, so it's going on ws10

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

##################################
# Application workspace assignment
##################################

# Before we actually launch any actual applications
# move specific windows to specific workspaces, both on boot and run (run xprop in console to get the 2nd class string)

assign [class="Brave-browser"] $ws2 # Throwaway out-of-the-box the browser
assign [class="firefox"] $ws2  # First browser of choice
assign [class="Tor Browser"] $ws2  # Third browser of choice
assign [class="Boostnote"] $ws3  # Somewhat overkill, but
assign [class="Steam"] $ws4  # I end up pushing there here anyway
assign [class="Gufw.py"] $ws10  # NOTE: this firewall software won't open like this- type 'sudo gufw' in console instead
assign [class="Lxappearance"] $ws10  # I keep forgetting this name
#assign [class="Thunar"] $ws10  # I keep forgetting this name too
assign [class="Nvidia-settings"] $ws10

##############################
# Monitor workspace assigmemnt
##############################

# Meaning I want these application to launch exlusively on these workspaces
workspace $ws10 output $m2
# No need to assign anything to $m1?

######################
# Launch these on boot
######################

# Always start these up at least once after boot, and assign them to the above specified workspaces

exec termite # ws1 automatically
exec firefox # pushed to ws2 (not using incognito to so containers can be used)
exec ulauncher # starts the ulauncher process (TODO: is there a more streamlined way?)
# exec thunar # pushed to a dedicated workspace!
# exec lxappearance # pushed to a dedicated workspace!
exec nvidia-settings  # pushed to a dedicated workspace!

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'Logging out. Confirm?' -B 'Yes, logout' 'i3-msg exit'"
bindsym $mod+Shift+f exec "sleep 1 && flameshot gui"

########
# Colors
########

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #285588 #ffffff #2e9ef4   #285577
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #000000 #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c
client.background       #ffffff

##################
# Resizing windows
##################

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

set $white #ffffff
set $whiteish #f3f4f5


###############
# Misc keybinds
###############

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


########
# i3 bar
########

# Start i3bar to display a workspace bar (plus system information, if available)
bar {
	#status_command i3blocks
	status_command i3blocks -c ~/.config/i3/i3blocks.conf
	tray_output primary
	colors {
        	background #0a0c0f
	        statusline $white
	        separator #666666

		# <colorclass> <border> <background> <text>
	        focused_workspace  #4c7899 #285577 $whiteish
	        active_workspace   #333333 #5f676a $whiteish
	        inactive_workspace #1a2832 #0d1b26 #888888
	        urgent_workspace   #66ff66 #009933 $whiteish
	        binding_mode       #2f343a #900000 $whiteish
    	}
}

bindsym $mod+Shift+x exec i3lock --color "#0d0d0d"


# Programs with no direct class name:
# alsamixer (audio mixer, just run it from the command line)
